{"version":3,"file":"static/js/193.ea5fd10f.chunk.js","mappings":"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","sources":["app/views/sessions/ForgotPassword.jsx"],"sourcesContent":["import { Box, Button, Card, Grid, styled, TextField } from '@mui/material';\nimport { Paragraph } from 'app/components/Typography';\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport $ from 'jquery';\nimport Api from 'Service/Api';\nimport PostProcess from '../material-kit/Component/Function/Post';\nimport EnquriySweetAlart from '../material-kit/Component/AddCompnent/Dialog/EnquriySweetAlart';\nconst FlexBox = styled(Box)(() => ({\n  display: 'flex',\n  alignItems: 'center'\n}));\n\nconst JustifyBox = styled(FlexBox)(() => ({\n  justifyContent: 'center'\n}));\n\nconst ContentBox = styled(Box)(({ theme }) => ({\n  padding: 32,\n\n  background: 'rgba(0, 0, 0, 0.01)'\n}));\n\nconst ForgotPasswordRoot = styled(JustifyBox)(() => ({\n  minHeight: '100vh !important',\n  '& .card': {\n    maxWidth: 800,\n    margin: '1rem',\n    borderRadius: 0\n  }\n}));\n\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const [resetTokenUser, setResetTokenUser] = useState('');\n  const [InVaild, setInValid] = useState('');\n  const [clicked, setClicked] = useState(false);\n  const [isAlertVisible, setIsAlertVisible] = React.useState(false);\n  var EmailBox = useRef();\n  var PasswordBox = useRef();\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    var email = EmailBox.current.value;\n\n    var raw = JSON.stringify({ user_email: email });\n\n    PostProcess(Api.ResetLinkApi, raw)\n      .then(handleResponse)\n      .then((result) => processPost(result, event))\n      .catch(handleError);\n  };\n\n  const handleResponse = (response) => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  };\n  const handleError = (error) => {\n    console.log('Error fetching user role:', error);\n  };\n\n  const processPost = (result, event) => {\n    if (result.status) {\n      var resetToken = result.resetToken;\n      setResetTokenUser(resetToken);\n      setClicked(false);\n      setIsAlertVisible(true);\n\n      event.target.reset();\n    } else {\n      setClicked(false);\n      setInValid('Invalid Email address.');\n\n      EnquriySweetAlart('Fail-Create', result.message);\n    }\n  };\n\n  const handleFormPasswordSubmit = (event) => {\n    event.preventDefault();\n\n    var password = PasswordBox.current.value;\n    var myHeaders = new Headers();\n\n    myHeaders.append('Content-Type', 'application/json');\n\n    var raw = JSON.stringify({\n      newPassword: password\n    });\n\n    PostProcess(Api.ForgotPassword, raw, resetTokenUser)\n      .then(handleResponse)\n      .then((result) => processPostPassword(result, event))\n      .catch(handleError);\n  };\n  const processPostPassword = (result, event) => {\n    if (result.status) {\n      setClicked(false);\n\n      EnquriySweetAlart('Update').then(() => {\n        navigate('/session/signin');\n      });\n      event.target.reset();\n    } else {\n      setClicked(false);\n\n      EnquriySweetAlart('Fail-Create', result.message);\n    }\n  };\n\n  return (\n    <ForgotPasswordRoot className=\"bg-white\">\n      <title>Admin panel - forgot Password</title>\n      <Card className=\"card bg-white\">\n        <Grid container className=\" bg-white\">\n          <Grid item xs={12}>\n            <JustifyBox p={3}>\n              <img width=\"200\" src=\"/Digi2limage/logo12223231.svg\" alt=\"\" />\n            </JustifyBox>\n            {isAlertVisible ? (\n              <ContentBox id=\"PasswordBox\">\n                <form\n                  onSubmit={handleFormPasswordSubmit}\n                  className={clicked ? 'was-validated' : ''}\n                >\n                  <div className=\"mb-2 form-group\">\n                    <h1 className=\"text-center\">Change Your Password </h1>\n\n                    <label>\n                      New Password <span style={{ color: 'red' }}>*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter password\"\n                      ref={PasswordBox}\n                      required\n                    />\n                    <div class=\"invalid-feedback\">Please fill out password field.</div>\n                  </div>\n                  <Paragraph className=\"p-1\">\n                    If you change or reset your password, youâ€™ll be signed out everywhere .\n                  </Paragraph>\n                  <input\n                    onClick={() => setClicked(true)}\n                    value=\" New Update\"\n                    fullWidth\n                    type=\"submit\"\n                    className=\"btn btn-primary  mb-3 mt-2 w-100\"\n                  />\n\n                  {isAlertVisible ? <label style={{ color: 'red' }}>{InVaild}</label> : ''}\n\n                  <Button\n                    fullWidth\n                    className=\"btn btn-primary mb-3 mt-2 \"\n                    onClick={() => navigate(-1)}\n                    sx={{ mt: 2 }}\n                  >\n                    Go Back\n                  </Button>\n                </form>\n              </ContentBox>\n            ) : (\n              <ContentBox id=\"EmailBox\">\n                <form onSubmit={handleFormSubmit} className={clicked ? 'was-validated' : ''}>\n                  <div className=\"mb-2 form-group\">\n                    <h1>Forgot Password?</h1>\n\n                    <label>\n                      Email <span style={{ color: 'red' }}>*</span>\n                    </label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      placeholder=\"Enter a Email\"\n                      ref={EmailBox}\n                      required\n                    />\n                    <div class=\"invalid-feedback\">Please fill out email field.</div>\n                  </div>\n                  <Paragraph className=\"p-1\">\n                    Enter your email address to reset your password\n                  </Paragraph>\n\n                  <input\n                    onClick={() => setClicked(true)}\n                    value=\" forgot\"\n                    fullWidth\n                    type=\"submit\"\n                    className=\"btn btn-primary  mb-3 mt-2 w-100\"\n                  />\n\n                  {InVaild ? <label style={{ color: 'red' }}>{InVaild}</label> : ''}\n\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    className=\"btn btn-primary mb-3 mt-2 \"\n                    sx={{ mt: 2 }}\n                  >\n                    Go Back\n                  </Button>\n                </form>\n              </ContentBox>\n            )}\n          </Grid>\n        </Grid>\n      </Card>\n    </ForgotPasswordRoot>\n  );\n};\n\nexport default ForgotPassword;\n"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","_ref","theme","padding","background","ForgotPasswordRoot","minHeight","maxWidth","margin","borderRadius","ForgotPassword","navigate","useNavigate","resetTokenUser","setResetTokenUser","useState","InVaild","setInValid","clicked","setClicked","isAlertVisible","setIsAlertVisible","React","EmailBox","useRef","PasswordBox","handleResponse","response","ok","Error","json","handleError","error","console","log","processPost","result","event","status","resetToken","target","reset","EnquriySweetAlart","message","processPostPassword","then","_jsxs","className","children","_jsx","Card","Grid","container","item","xs","p","width","src","alt","id","onSubmit","preventDefault","password","current","value","Headers","append","raw","JSON","stringify","newPassword","PostProcess","Api","catch","style","color","type","placeholder","ref","required","class","Paragraph","onClick","fullWidth","Button","sx","mt","email","user_email"],"sourceRoot":""}